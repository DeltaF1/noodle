(
	app/noodle : illustration program
	
	right-click - erase
	arrows - move zoom
	space - toogle zoom
	tab - invert image
	enter - next frame
	backspace - blank canvas
	1-8 - select brush size
	ctrl+n - clear
	ctrl+r - rename
	ctrl+o - load
	ctrl+s - save
)

%** { MUL2 } ( could be ;mul2_by_shifting JSR2 )

%+  { ADD } %-   { SUB }
%<  { LTH } %>   { GTH }  %=  { EQU }  %!  { NEQ }
%++ { ADD2 } %-- { SUB2 } 
%<< { LTH2 } %>> { GTH2 } %== { EQU2 } %!! { NEQ2 }
%!~ { NEQk NIP }

%DEBUG  { ;print-hex JSR2 #0a .Console/write DEO }
%DEBUG2 { SWP ;print-hex JSR2 ;print-hex JSR2 #0a .Console/write DEO }

%2*   { #10 SFT }
%8*   { #30 SFT }
%20*  { #50 SFT } 
%2**  { #10 SFT2 } %2// { #01 SFT2 }
%8**  { #30 SFT2 } %8// { #03 SFT2 }
%TOS  { #00 SWP }  

%SWP? { #01 JCN SWP }
%RTN  { JMP2r }
%SFL  { #40 SFT SFT }
%ABS2 { DUP2 #0f SFT2 = #05 JCN #0000 SWP2 -- }
%LTS2 { #8000 ++ SWP2 #8000 ++ >> }
%GTS2 { #8000 ++ SWP2 #8000 ++ << }
%8MOD2 { #0007 AND2 }
%8MOD { #07 AND }

%GET-ITER { OVR2 NIP OVR SWP }
%ADD-POSITIONS { ROT2 ++ ROT2 ROT2 ++ SWP2 } 

%SET-STATE { #01 .state/changed STZ ;draw-state JSR2 }
%RESET-STATE { #00 .state/changed STZ ;draw-state JSR2 }

%TOGGLE { LDZk #00 = SWP STZ }
%RELEASE-MOUSE { #00 .Mouse/state DEO }

%SIZE-TO-RECT {
	STH2 STH2 OVR2 STH2r ++ OVR2 STH2r ++
} ( x y w h -- x1 y1 x2 y2 )

( devices )

|00 @System     &vector $2 &pad     $6 &r      $2 &g     $2 &b     $2
|10 @Console    &vector $2 &read    $1 &pad    $5 &write $1 
|20 @Screen     &vector $2 &width   $2 &height $2 &pad   $2 &x     $2 &y $2 &addr $2 &pixel $1 &sprite $1
|80 @Controller &vector $2 &button  $1 &key    $1
|90 @Mouse      &vector $2 &x       $2 &y      $2 &state $1 &chord $1
|a0 @File       &vector $2 &success $2 &offset $2 &pad   $2 &name  $2 &length $2 &load $2 &save $2

( variables )

|0000

@state
	&timer $1
	&blink $1
	&presentation $1
	&changed $1
@path
	&length $1 
	&name $20
@brush 
	&tool $1 
	&size $1 
	&patt $1 
	&oper $2 
	&mode $1
	&drag $1
@cursor 
	&x $2  &y $2 
	&x0 $2 &y0 $2 
	&last $1 
@zoom 
	&active $1 
	&x $2 &y $2
@anim
	&frame $1
	&limit $1
	&onion $1
	&addr $2
@theme
	&r $1 &g $1 &b $1

@canvas   [ &x1 $2 &y1 $2 &x2 $2 &y2 $2 &w $2 &h $2 ]
@toolpane [ &x1 $2 &y1 $2 &x2 $2 &y2 $2 ]
@pattpane [ &x1 $2 &y1 $2 &x2 $2 &y2 $2 ]
@sizepane [ &x1 $2 &y1 $2 &x2 $2 &y2 $2 ]
@animpane [ &x1 $2 &y1 $2 &x2 $2 &y2 $2 ]
@rect [ &x1 $2 &y1 $2 &x2 $2 &y2 $2 ]
@line [ &x1 $2 &y1 $2 &x2 $2 &y2 $2 &sx $2 &sy $2 &dx $2 &dy $2 &e1 $2 &e2 $2 ]
@color $1 

( program )

|0100
	
	( vectors ) 
	;on-frame .Screen/vector DEO2
	;on-button .Controller/vector DEO2
	;on-mouse .Mouse/vector DEO2

	( colors )
	#70fa .System/r DEO2 
	#c0f6 .System/g DEO2 
	#90f6 .System/b DEO2

	( default size )
	.Screen/width DEI2 8// #0004 -- .canvas/w STZ2 
	.Screen/height DEI2 8// #0006 -- .canvas/h STZ2

	( default brush )
	#04 .brush/size STZ 
	#00 .brush/patt STZ 
	#00 .brush/tool STZ

	( setup panes )
	#0011 #000f #0030 #0008 SIZE-TO-RECT ;toolpane ;set-rect JSR2
	#0048 #000f #0040 #0008 SIZE-TO-RECT ;sizepane ;set-rect JSR2
	.Screen/width DEI2 #0050 -- #000f #0040 #0008 SIZE-TO-RECT ;pattpane ;set-rect JSR2
	#0011 .Screen/height DEI2 #0010 -- #0020 #0008 SIZE-TO-RECT ;animpane ;set-rect JSR2

	.anim/frame LDZ ;get-frame-addr JSR2 .anim/addr STZ2

	( ready. )
	;center JSR2
	;clear JSR2
	;draw-state JSR2

	( load default file )
	;untitled-txt ;new-file JSR2

	( theme support )
	;load-theme JSR2

BRK

@on-frame ( -> )
	( inactive )
BRK

@on-frame-trap ( -> )

	( incr ) .state/timer LDZ INC DUP .state/timer STZ 

	#08 ! ,&no-toggle JCN
		.state/blink TOGGLE
		#01 .state/blink LDZ 8* + ;draw-filepath JSR2
		#00 .state/timer STZ 
		&no-toggle
	
BRK

@on-mouse ( -> )

	;draw-cursor JSR2

	( on mouse-down )
	.Mouse/state DEI #00 > .cursor/last LDZ #0100 !! ,&no-mouse-down JCN
		.Mouse/x DEI2 .cursor/x0 STZ2
		.Mouse/y DEI2 .cursor/y0 STZ2
	.state/presentation LDZ ;&no-mouse-down JCN2
		.Mouse/x DEI2
		.Mouse/y DEI2
		DUP2 .canvas/y2 LDZ2 #0008 -- -- #0008 >> ,&no-edge JCN
		OVR2 .canvas/x2 LDZ2 #0008 -- -- #0008 >> ,&no-edge JCN
			#01 .brush/drag STZ 
			&no-edge
		( conver to bytes )
		STH2 8// NIP STH2r 8// NIP
		DUP #02 = ;on-touch-top JCN2
		DUP .Screen/height DEI2 8// NIP #02 - = ;on-touch-bottom JCN2
		POP2
		&no-mouse-down

	( on mouse-up )
	.Mouse/state DEI .cursor/last LDZ #00 > #0001 !! ,&no-mouse-up JCN
		.brush/tool LDZ #02 ! ,&no-complete-line JCN
			.cursor/x0 LDZ2 .canvas/x1 LDZ2 STH2k -- 
			.cursor/y0 LDZ2 .canvas/y1 LDZ2 STH2k -- SWP2r
			.Mouse/x DEI2 STH2r -- 
			.Mouse/y DEI2 STH2r -- 
				;paint-line JSR2
			.Mouse/state DEI .cursor/last STZ
			BRK &no-complete-line
		.brush/tool LDZ #04 ! ,&no-touch-rect JCN
			.cursor/x0 LDZ2 .canvas/x1 LDZ2 STH2k -- 
			.cursor/y0 LDZ2 .canvas/y1 LDZ2 STH2k -- SWP2r
			.Mouse/x DEI2 STH2r -- 
			.Mouse/y DEI2 STH2r -- 
				;paint-rect JSR2
			.Mouse/state DEI .cursor/last STZ
			BRK &no-touch-rect
		.brush/drag LDZ #01 ! ,&no-resize JCN
			#00 .brush/drag STZ
			;center JSR2 
			BRK &no-resize
		;draw-state JSR2
		&no-mouse-up

	.Mouse/state DEI DUP .cursor/last STZ #01 JCN [ BRK ]

	.brush/drag LDZ 
		;on-drag JCN2

	.Mouse/x DEI2 .Mouse/y DEI2 .canvas ;within-rect JSR2
		;on-touch-canvas JCN2

	( toggle present mode )
	.cursor/y0 LDZ2 .Screen/height DEI2 #0018 -- >> ,&no-present JCN
		;present JSR2
		RELEASE-MOUSE
		&no-present

BRK

@on-drag ( -> )
	
	.Mouse/x DEI2 DUP2 .Screen/width DEI2 2// STH2k #0010 ++ >> ,&no-clamp-x JCN
		POP2 STH2kr #0010 ++ 
		&no-clamp-x 
	STH2r -- 2** 8// INC2 .canvas/w STZ2 

	.Mouse/y DEI2 DUP2 .Screen/height DEI2 2// STH2k #0010 ++ >> ,&no-clamp-y JCN
		POP2 STH2kr #0010 ++ 
		&no-clamp-y 
	STH2r -- 2** 8// INC2 .canvas/h STZ2 

	( draw size )
	.Screen/width DEI2 #0078 -- .Screen/x DEO2
	#000e .Screen/y DEO2
	.canvas/w LDZ2 #80 SFT2 .canvas/h LDZ2 ++ #01 ;draw-short JSR2

	.cursor/x LDZ2 .Screen/x DEO2 
	.cursor/y LDZ2 .Screen/y DEO2
	;drag-icn .Screen/addr DEO2
	#40 .Screen/sprite DEO
	#4f .Screen/sprite DEO

BRK

@on-touch-canvas ( -> )
	
	( set erase from right-click/mode )
	;remove-pixel .Mouse/state DEI #01 > .brush/mode LDZ + ,&no-rightclick JCN 
		POP2 ;add-pixel 
		&no-rightclick 
	.brush/oper STZ2

	.brush/tool LDZ 
	DUP ,&no-touch-pen JCN
		.cursor/x0 LDZ2 .canvas/x1 LDZ2 STH2k -- 
		.cursor/y0 LDZ2 .canvas/y1 LDZ2 STH2k --
		.Mouse/x DEI2 DUP2 .cursor/x0 STZ2 SWP2r STH2r -- 
		.Mouse/y DEI2 DUP2 .cursor/y0 STZ2 STH2r -- 
			;paint-line JSR2
		#01 .state/changed STZ
		POP BRK 
		&no-touch-pen
	[ #01 ] !~ ,&no-touch-brush JCN
		.Mouse/x DEI2 .canvas/x1 LDZ2 -- #0003 -- ( cursor offset )
		.Mouse/y DEI2 .canvas/y1 LDZ2 -- #0003 -- ( cursor offset )
			;paint-brush JSR2
		#01 .state/changed STZ
		POP BRK 
		&no-touch-brush
	[ #03 ] !~ ,&no-touch-magic JCN
		.Mouse/x DEI2 .canvas/x1 LDZ2 -- #0003 -- ( cursor offset )
		.Mouse/y DEI2 .canvas/y1 LDZ2 -- #0003 -- ( cursor offset )
			;paint-magic JSR2
		#01 .state/changed STZ
		POP BRK 
		&no-touch-magic
	[ #05 ] !~ ,&no-touch-zoom JCN
		.zoom/active LDZ #00 = .zoom/active STZ
		( release ) #00 .Mouse/state DEO
		.Mouse/x DEI2 .canvas/x1 LDZ2 -- .canvas/w LDZ2 #01 SFT2 -- .zoom/x STZ2
		.Mouse/y DEI2 .canvas/y1 LDZ2 -- .canvas/h LDZ2 #01 SFT2 -- .zoom/y STZ2
		;redraw JSR2 RELEASE-MOUSE 
		&no-touch-zoom
	POP

BRK

@on-touch-top ( x y -> )
	
	POP
	#02 - 
	DUP #05 > ,&no-tool JCN
		.brush/tool STZ
		;draw-toolpane JSR2
		RELEASE-MOUSE BRK
		&no-tool
	DUP #06 > OVR #0f < #0101 !! ,&no-size JCN
		#07 -
		DUP .brush/size LDZ ! ,&no-toggle JCN
			.brush/mode LDZ #00 = .brush/mode STZ
			&no-toggle
		.brush/size STZ
		.brush/tool LDZ ,&no-switch1 JCN
			#01 .brush/tool STZ 
			&no-switch1
		;draw-sizepane JSR2
		;draw-toolpane JSR2
		RELEASE-MOUSE BRK
		&no-size
	DUP [ .Screen/width DEI2 8// NIP #0c - ] < ,&no-pattern JCN
	DUP [ .Screen/width DEI2 8// NIP #05 - ] > ,&no-pattern JCN
		.Screen/width DEI2 8// NIP #0c - - .brush/patt STZ
		.brush/tool LDZ ,&no-switch2 JCN
			#01 .brush/tool STZ 
			&no-switch2
		;draw-pattpane JSR2
		;draw-toolpane JSR2
		RELEASE-MOUSE BRK
		&no-pattern
	POP
	
BRK

@on-touch-bottom ( x y -> )
	
	POP
	( animpane )
	[ #02 ] !~ ,&no-onion JCN
		.anim/onion TOGGLE
		;redraw JSR2
		RELEASE-MOUSE POP BRK
		&no-onion
	[ #04 ] !~ ,&no-next JCN
		#01 ;mod-frame JSR2
		RELEASE-MOUSE POP BRK
		&no-next
	[ #05 ] !~ ,&no-frame JCN
		.Mouse/state DEI ;mod-limit JSR2
		RELEASE-MOUSE POP BRK
		&no-frame
	DUP #ff SWP .Screen/width DEI2 8// NIP - - 
	[ #02 ] !~ ,&no-save JCN
		;path/name ;save-file JSR2
		RELEASE-MOUSE POP BRK 
		&no-save
	[ #04 ] !~ ,&no-load JCN
		;load-file JSR2
		;draw-canvas JSR2
		RELEASE-MOUSE POP BRK 
		&no-load
	[ #05 ] !~ ,&no-blank JCN
		;untitled-txt ;new-file JSR2
		;draw-canvas JSR2
		RELEASE-MOUSE POP BRK 
		&no-blank
	POP
	#07 < ,&no-rename JCN
		#00 ;draw-filepath JSR2 
		;on-frame-trap .Screen/vector DEO2
		;on-button-trap .Controller/vector DEO2
		RELEASE-MOUSE BRK 
		&no-rename

BRK

@on-button ( -> )

	.Controller/button DEI #01 AND ;on-control JCN2
	
	( control zoom )
	.zoom/active LDZ #00 = ,&skip-zoom JCN
		.Controller/button DEI #f0 AND
		DUP #04 SFT #01 AND #01 ! ,&no-up JCN
			( move ) .zoom/y LDZ2 #0001 -- .zoom/y STZ2 
			&no-up
		DUP #05 SFT #01 AND #01 ! ,&no-down JCN
			( move ) .zoom/y LDZ2 INC2 .zoom/y STZ2 
			&no-down
		DUP #06 SFT #01 AND #01 ! ,&no-left JCN
			( move ) .zoom/x LDZ2 #0001 -- .zoom/x STZ2 
			&no-left
		DUP #07 SFT #01 AND #01 ! ,&no-right JCN
			( move ) .zoom/x LDZ2 INC2 .zoom/x STZ2 
			&no-right
		#00 = #04 JCN ;draw-canvas JSR2
	&skip-zoom

	.Controller/key DEI
	DUP #00 ! ,&continue JCN
		POP BRK &continue
	DUP #1b ! ,&no-escape JCN
		;load-theme JSR2 POP BRK &no-escape
	DUP #08 ! ,&no-backspace JCN
		( erase ) POP ;clear JSR2 BRK &no-backspace
	DUP #0d ! ,&no-enter JCN
		#01 ;mod-frame JSR2 BRK &no-enter
	DUP #09 ! ,&no-invert JCN
		( invert ) POP ;invert JSR2 BRK &no-invert
	DUP #20 ! ,&no-space JCN
		( toggle zoom ) .zoom/active LDZ #00 = .zoom/active STZ ;redraw JSR2 &no-space
	DUP #71 ! ,&no-qkey JCN
		( tool0 ) #00 .brush/tool STZ ;draw-toolpane JSR2 &no-qkey
	DUP #77 ! ,&no-wkey JCN
		( tool0 ) #01 .brush/tool STZ ;draw-toolpane JSR2 &no-wkey
	DUP #65 ! ,&no-ekey JCN
		( tool0 ) #02 .brush/tool STZ ;draw-toolpane JSR2 &no-ekey
	DUP #72 ! ,&no-rkey JCN
		( tool0 ) #03 .brush/tool STZ ;draw-toolpane JSR2 &no-rkey
	DUP #74 ! ,&no-tkey JCN
		( tool0 ) #04 .brush/tool STZ ;draw-toolpane JSR2 &no-tkey
	DUP
		DUP #30 > SWP #39 < #0101 !! ,&no-numkey JCN
		( size ) .Controller/key DEI #31 SUB .brush/size STZ ;draw-sizepane JSR2 &no-numkey
	POP

BRK

@on-control ( -> )
	
	.Controller/key DEI
	DUP [ LIT 'r ] ! ,&no-name JCN
		#00 ;draw-filepath JSR2 
		;on-frame-trap .Screen/vector DEO2
		;on-button-trap .Controller/vector DEO2
		POP BRK
		&no-name
	DUP [ LIT 'R ] ! ,&no-rename JCN
		#00 ;draw-filepath JSR2 
		#00 .Controller/key DEO
		#00 .path/length STZ
		#0000 .path/name STZ2
		;on-frame-trap .Screen/vector DEO2
		;on-button-trap .Controller/vector DEO2
		POP BRK
		&no-rename
	DUP [ LIT 'n ] ! ,&no-new JCN
		#25 ;draw-filepath JSR2
		;untitled-txt ;new-file JSR2
		;redraw JSR2 POP BRK &no-new
	DUP [ LIT 'o ] ! ,&no-open JCN
		;load-file JSR2
		;redraw JSR2 POP BRK &no-open
	DUP [ LIT 's ] ! ,&no-save JCN
		;path/name ;save-file JSR2 
		;draw-state JSR2 POP BRK  &no-save
	POP 

BRK

@on-button-trap ( -> )

	.Controller/key DEI
	DUP ,&continue JCN
		POP BRK
		&continue
	DUP ( backspace ) #08 ! ,&no-edit-backspace JCN
		( clamp ) .path/length LDZ #00 = ,&edit-end JCN
		#00 ;draw-filepath JSR2
		.path/length LDZ #01 - STHk .path/length STZ
		#00 .path/name STHr + STZ
		#01 ;draw-filepath JSR2 POP BRK
		&no-edit-backspace
	DUP ( special ) #20 > ,&no-edit-enter JCN
		;on-frame .Screen/vector DEO2
		;on-button .Controller/vector DEO2
		#00 .state/blink STZ 
		#01 ;draw-filepath JSR2 POP BRK
		&no-edit-enter
	( clamp ) .path/length LDZ #1f = ,&edit-end JCN
	DUP .path/name .path/length LDZ STHk + STZ
	STHr INC STHk .path/length STZ
	#00 .path/name STHr + STZ
	#01 ;draw-filepath JSR2
	&edit-end
	POP

BRK

@get-last-frame ( -- addr* )

	.anim/frame LDZ 
	DUP #00 = ,&rewind JCN
	#01 - ,get-frame-addr JSR RTN
	&rewind
		POP .anim/limit LDZ ,get-frame-addr JSR

RTN

@get-frame-addr ( frame -- addr* )

	TOS ,get-frame-size JSR ** ;data ++

RTN

@get-frame-size ( -- length* )
	
	.canvas/h LDZ2 .canvas/w LDZ2 ** 8**

RTN

@clear ( -- )
	
	.anim/addr LDZ2 STH2k ;get-frame-size JSR2 ++ STH2r
	&loop
		( save ) DUP2 #00 ROT ROT STA
		INC2 GTH2k ,&loop JCN
	POP2 POP2
	;redraw JSR2

RTN

@invert ( -- )
	
	.anim/addr LDZ2 STH2k ;get-frame-size JSR2 ++ STH2r
	&loop
		( load ) DUP2 DUP2 LDA #ff EOR
		( save ) ROT ROT STA
		INC2 GTH2k ,&loop JCN
	POP2 POP2
	;redraw JSR2

RTN

@center ( -- )
	
	( clear old )
	.canvas/x1 LDZ2 #0002 -- 
	.canvas/y1 LDZ2 #0002 -- 
	.canvas/x2 LDZ2 #0002 ++ 
	.canvas/y2 LDZ2 #0002 ++ 
		#00 ;fill-rect JSR2

	;draw-background JSR2

	.Screen/width DEI2 2// .canvas/w LDZ2 8** #01 SFT2 -- .canvas/x1 STZ2
	.Screen/height DEI2 2// .canvas/h LDZ2 8** #01 SFT2 -- .canvas/y1 STZ2

	;fit-canvas JSR2

RTN

@present ( -- )
	
	.state/presentation TOGGLE

	.state/presentation LDZ ,&hide JCN
	,&show JMP

	&show
		( load theme )
		.theme/r LDZ .System/r DEO
		.theme/g LDZ .System/g DEO
		.theme/b LDZ .System/b DEO
		;draw-background JSR2
		;fit-canvas JSR2
		RTN

	&hide
		( save theme )
		.System/r DEI DUP .theme/r STZ #0f AND .System/r DEO
		.System/g DEI DUP .theme/g STZ #0f AND .System/g DEO
		.System/b DEI DUP .theme/b STZ #0f AND .System/b DEO
		( clear panes )
		.toolpane/x1 LDZ2 #0002 -- 
		.toolpane/y1 LDZ2 #0002 -- 
		.toolpane/x2 LDZ2 INC2
		.toolpane/y2 LDZ2 INC2
			#00 ;fill-rect JSR2
		.sizepane/x1 LDZ2 #0002 -- 
		.sizepane/y1 LDZ2 #0002 -- 
		.sizepane/x2 LDZ2 INC2
		.sizepane/y2 LDZ2 INC2
			#00 ;fill-rect JSR2
		.pattpane/x1 LDZ2 #0002 -- 
		.pattpane/y1 LDZ2 #0002 -- 
		.pattpane/x2 LDZ2 INC2
		.pattpane/y2 LDZ2 INC2
			#00 ;fill-rect JSR2
		;draw-background JSR2
		,fit-canvas JSR
		RTN

RTN

@fit-canvas ( -- )
	
	.canvas/w LDZ2 8** .canvas/x1 LDZ2 ++ .canvas/x2 STZ2
	.canvas/h LDZ2 8** .canvas/y1 LDZ2 ++ .canvas/y2 STZ2

	( frame )
	.canvas/x1 LDZ2 #0001 -- 
	.canvas/y1 LDZ2 #0001 -- 
	.canvas/x2 LDZ2 
	.canvas/y2 LDZ2 
		#01 ;line-rect JSR2

	;draw-canvas JSR2

RTN

@mod-frame ( mod -- )

	DUP #01 = .anim LDZ2 = #0101 == ,&c JCN
	DUP #ff = #00 .anim/frame LDZ = #0101 == ,&cc JCN
	.anim/frame LDZ ADD ,&end JMP
	&c
		#00 ,&end JMP
	&cc
		.anim/limit LDZ 
	&end
		DUP .anim/frame STZ 
		;get-frame-addr JSR2 .anim/addr STZ2
		;redraw JSR2 

RTN

@mod-limit ( mod -- )

	.anim/limit LDZ + DUP .anim/limit STZ

	( get maximum frames that can fit in memory )
	#fff0 ;data -- ;get-frame-size JSR2 DIV2 #0001 -- NIP
	GTH ,&clamp JCN
	;redraw JSR2 
	RTN
	&clamp
		#00 .anim/limit STZ
		;redraw JSR2 

RTN

@paint-line ( x1* y1* x2* y2* -- )
	
	( load ) .line/y1 STZ2 .line/x1 STZ2 .line/y2 STZ2 .line/x2 STZ2

	( trim if zoomed )
	.zoom/active LDZ #01 ! ,&no-zoom JCN
		.line/x1 LDZ2 8// .zoom/x LDZ2 ++ .line/x1 STZ2
		.line/y1 LDZ2 8// .zoom/y LDZ2 ++ .line/y1 STZ2
		.line/x2 LDZ2 8// .zoom/x LDZ2 ++ .line/x2 STZ2
		.line/y2 LDZ2 8// .zoom/y LDZ2 ++ .line/y2 STZ2
	&no-zoom

	.line/x1 LDZ2 .line/x2 LDZ2 -- ABS2 .line/dx STZ2
	.line/y1 LDZ2 .line/y2 LDZ2 -- ABS2 #0000 SWP2 -- .line/dy STZ2
	#ffff #00 .line/x2 LDZ2 .line/x1 LDZ2 LTS2 2** ++ .line/sx STZ2
	#ffff #00 .line/y2 LDZ2 .line/y1 LDZ2 LTS2 2** ++ .line/sy STZ2
	.line/dx LDZ2 .line/dy LDZ2 ++ .line/e1 STZ2
	&loop
		( paint ) .line/x2 LDZ2 .line/y2 LDZ2 .brush/oper LDZ2 JSR2
		.line/x2 LDZ2 .line/x1 LDZ2 == .line/y2 LDZ2 .line/y1 LDZ2 == #0101 == ,&end JCN
		.line/e1 LDZ2 2** .line/e2 STZ2
		.line/e2 LDZ2 .line/dy LDZ2 LTS2 ,&skipy JCN
			.line/e1 LDZ2 .line/dy LDZ2 ++ .line/e1 STZ2
			.line/x2 LDZ2 .line/sx LDZ2 ++ .line/x2 STZ2
			&skipy
		.line/e2 LDZ2 .line/dx LDZ2 GTS2 ,&skipx JCN
			.line/e1 LDZ2 .line/dx LDZ2 ++ .line/e1 STZ2
			.line/y2 LDZ2 .line/sy LDZ2 ++ .line/y2 STZ2
			&skipx
		;&loop JMP2
	&end

	;draw-canvas JSR2

RTN

@paint-rect ( x1* y1* x2* y2* -- )

	( load ) .rect/y2 STZ2 .rect/x2 STZ2 .rect/y1 STZ2 .rect/x1 STZ2

	( trim if zoomed )
	.zoom/active LDZ #01 ! ,&no-zoom JCN
		.rect/x1 LDZ2 8// .zoom/x LDZ2 ++ .rect/x1 STZ2
		.rect/y1 LDZ2 8// .zoom/y LDZ2 ++ .rect/y1 STZ2
		.rect/x2 LDZ2 8// .zoom/x LDZ2 ++ INC2 .rect/x2 STZ2
		.rect/y2 LDZ2 8// .zoom/y LDZ2 ++ INC2 .rect/y2 STZ2
	&no-zoom

	.rect/y2 LDZ2 .rect/y1 LDZ2
	&ver
		STH2k
		.rect/x2 LDZ2 .rect/x1 LDZ2
		&hor
			DUP2 STH2kr ;patternize JSR2 #00 = ,&no-pixel JCN
				DUP2 STH2kr .brush/oper LDZ2 JSR2 
				&no-pixel
			INC2
			OVR2 OVR2 GTS2 ,&hor JCN
		POP2 POP2 POP2r
		INC2
		OVR2 OVR2 GTS2 ,&ver JCN
	POP2 POP2

	;draw-canvas JSR2
	
RTN

@paint-brush ( x* y* -- )

	( trim if zoomed )
	.zoom/active LDZ #01 ! ,&no-zoom JCN
		8// .zoom/y LDZ2 ++ #0003 -- SWP2
		8// .zoom/x LDZ2 ++ #0003 -- SWP2
	&no-zoom

	STH2 STH2

	#08 #00
	&ver
		#08 #00
		&hor
			GET-ITER
			DUP2 STH STH ;size-icns #00 .brush/size LDZ 8** ++ #00 STHr ++ LDA #07 STHr SUB SFT #01 AND #00 = ,&skip JCN
			DUP2 [ TOS ROT TOS SWP2 ] STH2kr SWP2r STH2kr SWP2r ADD-POSITIONS OVR2 OVR2 ;patternize JSR2 #00 = ,&no-pixel JCN
					.brush/oper LDZ2 JSR2  
					,&skip JMP
					&no-pixel
					POP2 POP2
				&skip
				POP2
			INC GTHk ,&hor JCN
			POP2
		INC GTHk ,&ver JCN
	POP2

	POP2r POP2r
	;draw-canvas JSR2

RTN

@paint-magic ( x* y* -- )

	( trim if zoomed )
	.zoom/active LDZ #01 ! ,&no-zoom JCN
		8// .zoom/y LDZ2 ++ #0003 -- SWP2
		8// .zoom/x LDZ2 ++ #0003 -- SWP2
		&no-zoom

	STH2 STH2

	.brush/size LDZ #00
	&ver
		.brush/size LDZ #00 
		&hor
			GET-ITER [ TOS ROT TOS ]
			STH2kr SWP2r STH2kr SWP2r ADD-POSITIONS
			;clean-pixel JSR2
			INC GTHk ,&hor JCN
			POP2
		INC GTHk ,&ver JCN
	POP2

	POP2r POP2r

	;draw-canvas JSR2

RTN

@patternize ( x* y* -- )
	
	STH2 STH2
	.brush/patt LDZ 
	DUP ,&noplain JCN
		POP POP2r POP2r
		#01 RTN &noplain
	DUP #01 ! ,&notone1 JCN
		POP OVR2r OVR2r
		STH2r STH2r ++ #0001 AND2 #0000 ==
		STH2r STH2r -- #0001 AND2 #0000 ==
		#0101 == RTN &notone1
	DUP #02 ! ,&notone2 JCN
		POP OVR2r OVR2r
		STH2r STH2r ++ #0003 AND2 #0000 ==
		STH2r STH2r -- #0003 AND2 #0000 ==
		#0101 == RTN &notone2
	DUP #03 ! ,&notone3 JCN
		POP OVR2r OVR2r
		STH2r STH2r ++ #0005 AND2 #0000 ==
		STH2r STH2r -- #0005 AND2 #0000 ==
		#0101 == RTN &notone3
	DUP #04 ! ,&notone4 JCN
		POP STH2r STH2r 
		++ #0003 AND2 #0000 == RTN &notone4
	DUP #05 ! ,&notone5 JCN
		POP STH2r STH2r 
		-- #0003 AND2 #0000 == RTN &notone5
	DUP #06 ! ,&notone6 JCN
		POP SWP2r POP2r STH2r
		#0001 AND2 NIP RTN &notone6
	DUP #07 ! ,&notone7 JCN
		POP POP2r STH2r 
		#0001 AND2 NIP RTN &notone7
	POP POP2r POP2r
	#00

RTN

@clean-pixel ( x* y* -- )
	
	( skip blanks ) OVR2 OVR2 ;get-pixel JSR2 ,&valid JCN [ POP2 POP2 RTN ] &valid

	( NE )
	OVR2 OVR2 #0001 -- ,get-pixel JSR STH
	OVR2 INC2 OVR2 ,get-pixel JSR STHr
	#0101 !! ,&no-se JCN 
		,&remove JMP &no-se
	( NW )
	OVR2 OVR2 #0001 --  ,get-pixel JSR STH
	OVR2 #0001 -- OVR2 ,get-pixel JSR STHr
	#0101 !! ,&no-sw JCN 
		,&remove JMP &no-sw
	( SE )
	OVR2 OVR2 INC2 ,get-pixel JSR STH
	OVR2 INC2 OVR2 ,get-pixel JSR STHr
	#0101 !! ,&no-ne JCN 
		,&remove JMP &no-ne
	( SW )
	OVR2 OVR2 INC2  ,get-pixel JSR STH
	OVR2 #0001 -- OVR2 ,get-pixel JSR STHr
	#0101 !! ,&no-nw JCN 
		,&remove JMP &no-nw
	POP2 POP2 RTN
	&remove
		OVR2 OVR2 ;remove-pixel JSR2 [ POP2 POP2 RTN ]

RTN

@get-pixel ( x* y* -- b )

	( clamp ) DUP2 8// .canvas/h LDZ2 >> ,&skip JCN
	( clamp ) OVR2 8// .canvas/w LDZ2 >> ,&skip JCN

	( keep x* ) OVR2 NIP 8MOD STH
	,get-tile JSR

	( load ) LDA
	#07 STHr SUB SFT #01 AND
	RTN
	&skip
	POP2 POP2 #01

RTN

@get-tile ( x* y* -- addr* )

	STH2k
	8// SWP2
	8// SWP2 
	.canvas/w LDZ2 ** ++ 8**
	STH2r 8MOD2 ++
	.anim/addr LDZ2 ++ 

RTN

@add-pixel ( x* y* -- )
	
	( clamp ) DUP2 8// .canvas/h LDZ2 << #00 = ,&skip JCN
	( clamp ) OVR2 8// .canvas/w LDZ2 << #00 = ,&skip JCN

	( keep x* ) OVR2 NIP 8MOD STH
	,get-tile JSR

	( load ) LDAk
	( mask ) #01 #07 STHr SUB SFL ORA
	( save ) ROT ROT STA
	RTN
	&skip
	POP2 POP2

RTN

@remove-pixel ( x* y* -- )

	( clamp ) DUP2 8// .canvas/h LDZ2 << #00 = ,&skip JCN
	( clamp ) OVR2 8// .canvas/w LDZ2 << #00 = ,&skip JCN

	( keep x* ) OVR2 NIP 8MOD STH
	,get-tile JSR

	( load ) LDAk
	( mask ) #01 #07 STHr SUB SFL #ff EOR AND
	( save ) ROT ROT STA
	RTN
	&skip
	POP2 POP2

RTN

( file )

@new-file ( path* -- )

	#2c ;draw-filepath JSR2 

	STH2
	#0c #00
	&loop
		DUP DUP TOS STH2kr ++ LDA
		SWP .path/name + STZ
		INC GTHk ,&loop JCN
	( end ) #00 SWP .path/name + STZ 
	.path/length STZ 
	POP2r
	RESET-STATE
	;clear JSR2

RTN

@load-file ( path* -- )

	;path/name .File/name DEO2 
	;get-frame-size JSR2 .File/length DEO2 
	;data .File/load DEO2

	RESET-STATE

	;draw-canvas JSR2
	;draw-state JSR2

RTN

@save-file ( path* -- )

	.File/name DEO2 
	;get-frame-size JSR2 .File/length DEO2 
	;data .File/save DEO2

	RESET-STATE
	;draw-state JSR2

RTN

( theme )

@theme-txt ".theme $1

@load-theme ( -- )

	;theme-txt .File/name DEO2 
	#0006 .File/length DEO2 
	#fffa .File/load DEO2

	.File/success DEI2 #0006 !! ,&ignore JCN
		#fffa LDA2 .System/r DEO2
		#fffc LDA2 .System/g DEO2
		#fffe LDA2 .System/b DEO2
		;redraw JSR2
		&ignore

RTN

( Drawing )

@redraw ( -- )
	
	;draw-background JSR2
	,draw-canvas JSR
		
RTN

@draw-canvas ( -- )
	
	.zoom/active LDZ ,draw-canvas-zoom JCN
	.anim/onion LDZ ,&no-onion JCN
		( onionskin ) ;get-last-frame JSR2 #0b ,draw-canvas-body JSR
		( drawing ) .anim/addr LDZ2 #05 ,draw-canvas-body JSR
		,draw-canvas-edge JMP
		RTN
		&no-onion
	( drawing ) .anim/addr LDZ2 #09 ,draw-canvas-body JSR
	,draw-canvas-edge JMP

RTN

@draw-canvas-edge ( -- )

	.state/presentation LDZ ,&no-edge JCN
		;edge-icn .Screen/addr DEO2
		#05 .Screen/sprite DEO 
		&no-edge

RTN

@draw-canvas-body ( addr* color -- )
	
	STH
	.Screen/addr DEO2
	.canvas/y2 LDZ2 .canvas/y1 LDZ2
	&ver
		DUP2 .Screen/y DEO2
		.canvas/x2 LDZ2 .canvas/x1 LDZ2
		&hor
			DUP2 .Screen/x DEO2
			STHkr .Screen/sprite DEO
			#0008 ++
			.Screen/addr DEI2 #0008 ++ .Screen/addr DEO2
			GTH2k ,&hor JCN
		POP2 POP2
		#0008 ++
		GTH2k ,&ver JCN
	POP2 POP2
	POPr

RTN

@draw-canvas-zoom ( -- )

	.canvas/y1 LDZ2 .Screen/y DEO2
	.canvas/h LDZ2 .zoom/y LDZ2 STH2k ++ STH2r
	&ver
		( save ) STH2k
		.canvas/x1 LDZ2 .Screen/x DEO2
		.canvas/w LDZ2 .zoom/x LDZ2 STH2k ++ STH2r
		&hor
			( save ) STH2k
			( incr ) #00 STH2r STH2kr ;get-pixel JSR2 8** ;bigpixel-icns ++ .Screen/addr DEO2
			( draw ) #09 .Screen/sprite DEO
			.Screen/x DEI2 #0008 ++ .Screen/x DEO2
			INC2
			OVR2 OVR2 GTS2 ,&hor JCN
		POP2 POP2
		POP2r
		.Screen/y DEI2 #0008 ++ .Screen/y DEO2
		INC2
		OVR2 OVR2 GTS2 ,&ver JCN
	POP2 POP2

RTN

@draw-cursor ( -- )

	( clear brush size )
	.cursor/x LDZ2
	.cursor/y LDZ2
	( clear size cursor )
	OVR2 OVR2
	#0003 -- .Screen/y DEO2 
	#0003 -- .Screen/x DEO2 
	#40 .Screen/sprite DEO
	( clear last cursor )
	.Screen/y DEO2 
	.Screen/x DEO2 
	#40 .Screen/sprite DEO

	( record cursor positions )
	.Mouse/x DEI2 .cursor/x STZ2 
	.Mouse/y DEI2 .cursor/y STZ2

	( draw size cursor )
	.brush/tool LDZ DUP #01 = SWP #03 = #0000 == ;&outside-canvas JCN2
	( outside canvas )
	.Mouse/x DEI2 .Mouse/y DEI2 .canvas ;within-rect JSR2 #00 = ;&outside-canvas JCN2
		.cursor/x LDZ2 #0003 -- .Screen/x DEO2 
		.cursor/y LDZ2 #0003 -- .Screen/y DEO2
		;brush-icns #00 .brush/size LDZ 8** ++ .Screen/addr DEO2
		.Mouse/state DEI DUP 2* #41 ADD .Screen/sprite DEO
		#00 = ,&outside-canvas JCN RTN
	&outside-canvas

	( draw new cursor )
	.cursor/x LDZ2 .Screen/x DEO2 
	.cursor/y LDZ2 .Screen/y DEO2
	;pointers-icns .Screen/addr DEO2
	#4143 .Mouse/state DEI SWP? POP .Screen/sprite DEO

RTN

@draw-toolpane ( -- )

	( frame ) 	
	.toolpane/x1 LDZ2 #0002 -- 
	.toolpane/y1 LDZ2 #0002 -- 
	.toolpane/x2 LDZ2 
	.toolpane/y2 LDZ2 
		#01 ;line-rect JSR2

	.toolpane/x1 LDZ2 .Screen/x DEO2 
	.toolpane/y1 LDZ2 .Screen/y DEO2 
	;tool-icns .Screen/addr DEO2

	( stash selection ) .brush/tool LDZ STH
	#06 #00
	&loop
		DUP STHkr = INC .Screen/sprite DEO
		.Screen/x DEI2 #0008 ++ .Screen/x DEO2
		.Screen/addr DEI2 #0008 ++ .Screen/addr DEO2
		INC GTHk ,&loop JCN
	POP2 
	.zoom/active LDZ #01 ! ,&no-zoom JCN
		.Screen/x DEI2 #0008 -- .Screen/x DEO2
		;tool-icns #0030 ++ .Screen/addr DEO2
		#05 STHkr = INC .Screen/sprite DEO
		&no-zoom
	( pop selection ) POPr

RTN

@draw-pattpane ( -- )

	( frame ) 	
	.pattpane/x1 LDZ2 #0002 -- 
	.pattpane/y1 LDZ2 #0002 -- 
	.pattpane/x2 LDZ2 
	.pattpane/y2 LDZ2 
		#01 ;line-rect JSR2

	.pattpane/x1 LDZ2 .Screen/x DEO2 
	.pattpane/y1 LDZ2 .Screen/y DEO2 
	;patt-icns .Screen/addr DEO2

	( stash selection ) .brush/patt LDZ STH
	#08 #00 
	&loop
		DUP STHkr = INC .Screen/sprite DEO
		.Screen/x DEI2 #0008 ++ .Screen/x DEO2
		.Screen/addr DEI2 #0008 ++ .Screen/addr DEO2
		INC GTHk ,&loop JCN
	POP2
	( pop selection ) POPr

RTN

@draw-sizepane ( -- )

	( frame )
	.sizepane/x1 LDZ2 #0002 -- 
	.sizepane/y1 LDZ2 #0002 -- 
	.sizepane/x2 LDZ2 
	.sizepane/y2 LDZ2 
		#01 ;line-rect JSR2

	.sizepane/x1 LDZ2 .Screen/x DEO2 
	.sizepane/y1 LDZ2 .Screen/y DEO2 
	;size-icns .brush/mode LDZ 20* TOS ++ .Screen/addr DEO2

	( stash selection ) .brush/size LDZ STH
	#08 #00 
	&loop
		DUP STHkr = INC .Screen/sprite DEO
		.Screen/x DEI2 #0008 ++ .Screen/x DEO2
		.Screen/addr DEI2 #0008 ++ .Screen/addr DEO2
		INC GTHk ,&loop JCN
	POP2
	( pop selection ) POPr

RTN

@draw-animpane ( -- )

	.animpane/y1 LDZ2 .Screen/y DEO2 

	.animpane/x1 LDZ2 STH2k .Screen/x DEO2 
	;eyes-icns .anim/onion LDZ TOS #0008 MUL2 ++ .Screen/addr DEO2
	#01 .Screen/sprite DEO

	STH2kr #0010 ++ .Screen/x DEO2 
	.anim/frame LDZ ;draw-short/parse JSR2 .Screen/addr DEO2
	#02 .Screen/sprite DEO

	STH2r #0018 ++ .Screen/x DEO2 
	.anim/limit LDZ ;draw-short/parse JSR2 .Screen/addr DEO2
	#08 .Screen/sprite DEO

RTN

@draw-background ( -- )
	
	;draw-state JSR2

	.state/presentation LDZ #00 = #01 JCN [ RTN ]

	( draw size )
	.Screen/width DEI2 #0078 -- .Screen/x DEO2
	#000e .Screen/y DEO2
	.canvas/w LDZ2 #80 SFT2 .canvas/h LDZ2 ++ #01 ;draw-short JSR2

	( bottom )
	.Screen/height DEI2 #0010 -- .Screen/y DEO2
	#0010 .Screen/x DEO2
	#01 ;draw-filepath JSR2
	&clear
		#00 .Screen/sprite DEO
		.Screen/x DEI2 #0008 ++ DUP2 .Screen/x DEO2
		.Screen/width DEI2 << ,&clear JCN

	( draw hor line )
	#0000 
	.Screen/width DEI2 
	.Screen/height DEI2 2// 
	.state/presentation LDZ #00 = 
		;line-hor JSR2

	( draw ver line )
	.Screen/width DEI2 2// 
	#0000 
	.Screen/height DEI2 
	.state/presentation LDZ #00 = 
		;line-ver JSR2

	( file i/o )
	.Screen/height DEI2 #0010 -- .Screen/y DEO2
	.Screen/width DEI2 STH2k #0028 -- .Screen/x DEO2
	;load-icn .Screen/addr DEO2
	#01 .Screen/sprite DEO
	STH2r #0030 -- .Screen/x DEO2
	;make-icn .Screen/addr DEO2
	#01 .Screen/sprite DEO

	;draw-toolpane JSR2
	;draw-pattpane JSR2
	;draw-sizepane JSR2
	;draw-animpane JSR2

RTN

@draw-state ( -- )
	
	.Screen/height DEI2 #0010 -- .Screen/y DEO2
	.Screen/width DEI2 #0018 -- .Screen/x DEO2
	;save-icn .Screen/addr DEO2
	#0f05 .state/changed LDZ SWP? POP .Screen/sprite DEO

RTN

@draw-filepath ( color -- )
	
	STH
	#0038 .Screen/x DEO2
	.Screen/height DEI2 #0010 -- .Screen/y DEO2
	;path/name
	&loop
		LDAk DUP #00 ! 20* - TOS 8** ;font ++ .Screen/addr DEO2 
		STHkr .Screen/sprite DEO
		.Screen/x DEI2 #0008 ++ .Screen/x DEO2
		INC2 LDAk ,&loop JCN
	POP2
	POPr
	( clear last ) 
	#00 .Screen/sprite DEO

RTN

( Generics )

@within-rect ( x* y* rect -- flag )
	
	STH
	( y < rect.y1 ) DUP2 STHkr #02 ADD LDZ2 << ,&skip JCN
	( y > rect.y2 ) DUP2 STHkr #06 ADD LDZ2 >> ,&skip JCN
	SWP2
	( x < rect.x1 ) DUP2 STHkr LDZ2 << ,&skip JCN
	( x > rect.x2 ) DUP2 STHkr #04 ADD LDZ2 >> ,&skip JCN
	POP2 POP2 POPr
	#01 
RTN
	&skip
	POP2 POP2 POPr
	#00

RTN

@draw-short ( short* color -- )

	STH SWP 
		DUP #04 SFT ,&parse JSR .Screen/addr DEO2
		( draw ) STHkr .Screen/sprite DEO
	.Screen/x DEI2 #0008 ++ .Screen/x DEO2
		#0f AND ,&parse JSR .Screen/addr DEO2
		( draw ) STHkr .Screen/sprite DEO
	.Screen/x DEI2 #0008 ++ .Screen/x DEO2
		DUP #04 SFT ,&parse JSR .Screen/addr DEO2
		( draw ) STHkr .Screen/sprite DEO
	.Screen/x DEI2 #0008 ++ .Screen/x DEO2
		#0f AND ,&parse JSR .Screen/addr DEO2
		( draw ) STHr .Screen/sprite DEO
	RTN
	&parse ( value -- addr* )
		DUP #09 GTH ,&above JCN 
			#30 ADD #20 - TOS 8** ;font ++ RTN 
		&above 
			#09 SUB #40 ADD #20 - TOS 8** ;font ++ RTN

RTN

@line-rect ( x1* y1* x2* y2* color -- )

	( load ) .color STZ 
	STH2k .rect/y2 STZ2 .rect/x2 STZ2 
	STH2k .rect/y1 STZ2 .rect/x1 STZ2
	STH2r STH2r SWP2
	&ver
		( save ) DUP2 .Screen/y DEO2
		( draw ) .rect/x1 LDZ2 .Screen/x DEO2 .color LDZ DUP .Screen/pixel DEO
		( draw ) .rect/x2 LDZ2 .Screen/x DEO2 .Screen/pixel DEO
		( incr ) INC2
		OVR2 OVR2 GTS2 ,&ver JCN
	POP2 POP2
	.rect/x1 LDZ2 .rect/x2 LDZ2 SWP2
	&hor
		( save ) DUP2 .Screen/x DEO2
		( draw ) .rect/y1 LDZ2 .Screen/y DEO2 .color LDZ DUP .Screen/pixel DEO
		( draw ) .rect/y2 LDZ2 .Screen/y DEO2 .Screen/pixel DEO
		( incr ) INC2
		OVR2 OVR2 GTS2 ,&hor JCN
	POP2 POP2

RTN
	
@fill-rect ( x1* y1* x2* y2* color -- )
	
	,&color STR
	( x1 x2 y1 y2 ) ROT2
	&ver
		( save ) DUP2 .Screen/y DEO2
		STH2 STH2 OVR2 OVR2 SWP2
		&hor
			( save ) DUP2 .Screen/x DEO2
			( draw ) ,&color LDR .Screen/pixel DEO
			( incr ) INC2
			OVR2 OVR2 GTS2 ,&hor JCN
		POP2 POP2 STH2r STH2r
		( incr ) INC2
		OVR2 OVR2 GTS2 ,&ver JCN
	POP2 POP2 POP2 POP2

RTN
	&color $1

@line-hor ( x0* x1* y* color -- )
	
	STH .Screen/y DEO2 SWP2
	&loop
		( save ) DUP2 .Screen/x DEO2
		( draw ) STHkr .Screen/pixel DEO
		#0002 ++ GTH2k ,&loop JCN
	POP2 POP2 POPr

RTN

@line-ver ( x* y0* y1* color -- )
	
	STH ROT2 .Screen/x DEO2 SWP2
	&loop
		( save ) DUP2 .Screen/y DEO2
		( draw ) STHkr .Screen/pixel DEO
		#0002 ++ GTH2k ,&loop JCN
	POP2 POP2 POPr

RTN

@set-rect ( x1 y1 x2 y2 addr -- )

	DUP2 ROT2 SWP2 #0006 ++ STA2
	DUP2 ROT2 SWP2 #0004 ++ STA2
	DUP2 ROT2 SWP2 #0002 ++ STA2
	DUP2 ROT2 SWP2 STA2
	POP2

RTN

@print-hex ( value -- )
	
	STHk #04 SFT ,&parse JSR .Console/write DEO
	STHr #0f AND ,&parse JSR .Console/write DEO
	RTN
	&parse ( value -- char )
		DUP #09 GTH ,&above JCN #30 ADD RTN &above #09 SUB #60 ADD RTN

RTN

@save-icn      1054 28c6 2854 1000 
@make-icn      fe82 8282 848a f400 
@load-icn      feaa d6aa d4aa f400 
@edge-icn      0000 0000 0103 070f
@drag-icn      1010 10ee 1010 1000
@untitled-txt  "untitled.bit $1

@bigpixel-icns
	5580 0080 0080 0080 
	55ff 7fff 7fff 7fff 
@size-icns
	0000 0010 0000 0000
	0000 1038 1000 0000
	0000 3838 3800 0000
	0010 387c 3810 0000
	0038 7c7c 7c38 0000
	1038 7cfe 7c38 1000
	387c fefe fe7c 3800
	7cfe fefe fefe 7c00
	0000 0000 0000 0000
	0000 0010 0000 0000
	0000 1028 1000 0000
	0010 2844 2810 0000
	0038 4444 4438 0000
	1028 4482 4428 1000
	3844 8282 8244 3800
	7c82 8282 8282 7c00
@anim-icns
	0000 1838 7838 1800
	0000 181c 1e1c 1800
@eyes-icns
	0038 4492 2810 0000
	0000 0082 4438 0000
@patt-icns
	fefe fefe fefe fe00
	fed6 aad6 aad6 fe00
	fe92 82d6 8292 fe00
	fe82 92aa 9282 fe00
	fea6 ca92 a6ca fe00
	feca a692 caa6 fe00
	feaa aaaa aaaa fe00	
	fe82 fe82 fe82 fe00
@tool-icns
	c0e0 5028 140a 0400
	e0d0 a844 2212 0c00
	c0b8 4848 7804 0200
	a850 8850 a804 0200
	fc84 8480 84ea 0400
	3048 8484 4834 0200 ( zoom )
	3245 8284 4834 0200 ( zoom out )
@brush-icns
	0000 0010 0000 0000
	0000 1028 1000 0000
	0000 3828 3800 0000
	0010 2844 2810 0000
	0038 4444 4438 0000
	1028 4482 4428 1000
	3844 8282 8244 3800
	7c82 8282 8282 7c00
	7cfe fefe fefe 7c00
@pointers-icns
	80c0 e0f0 f8e0 1000
	2020 20b8 7c7c 3838 
@font ( specter8-frag font )
	0000 0000 0000 0000 0008 0808 0800 0800
	0014 1400 0000 0000 0024 7e24 247e 2400
	0008 1e28 1c0a 3c08 0000 2204 0810 2200
	0030 4832 4c44 3a00 0008 1000 0000 0000
	0004 0808 0808 0400 0020 1010 1010 2000
	0000 2214 0814 2200 0000 0808 3e08 0800
	0000 0000 0000 0810 0000 0000 3e00 0000
	0000 0000 0000 0800 0000 0204 0810 2000
	003c 464a 5262 3c00 0018 0808 0808 1c00
	003c 4202 3c40 7e00 003c 421c 0242 3c00
	000c 1424 447e 0400 007e 407c 0242 3c00
	003c 407c 4242 3c00 007e 0204 0810 1000
	003c 423c 4242 3c00 003c 4242 3e02 3c00
	0000 0010 0000 1000 0000 1000 0010 1020
	0000 0810 2010 0800 0000 003e 003e 0000
	0000 1008 0408 1000 003c 420c 1000 1000
	003c 4232 4a42 3c00 003c 4242 7e42 4200
	007c 427c 4242 7c00 003c 4240 4042 3c00
	007c 4242 4242 7c00 007e 4078 4040 7e00
	007e 4078 4040 4000 003c 4240 4642 3c00
	0042 427e 4242 4200 001c 0808 0808 1c00
	007e 0202 0242 3c00 0042 4478 4442 4200
	0040 4040 4040 7e00 0042 665a 4242 4200
	0042 6252 4a46 4200 003c 4242 4242 3c00
	007c 4242 7c40 4000 003c 4242 4244 3a00
	007c 4242 7c44 4200 003e 403c 0242 3c00
	007e 0808 0808 1000 0042 4242 4244 3a00
	0042 4242 4224 1800 0042 4242 5a66 4200
	0042 423c 4242 4200 0042 423e 0242 3c00
	007e 020c 3040 7e00 000c 0808 0808 0c00
	0040 2010 0804 0200 0030 1010 1010 3000
	0008 1400 0000 0000 0000 0000 0000 7e00
	0008 0400 0000 0000 0000 3c02 3e42 3a00
	0040 407c 4242 7c00 0000 3c42 4042 3c00
	0002 023e 4242 3e00 0000 3c42 7e40 3e00
	0000 3e40 7840 4000 0000 3c42 3e02 3c00
	0040 405c 6242 4200 0008 0018 0808 0400
	0008 0018 0808 4830 0040 4244 7844 4200
	0010 1010 1010 0c00 0000 6c52 5252 5200
	0000 5c62 4242 4200 0000 3c42 4242 3c00
	0000 7c42 427c 4040 0000 3e42 423e 0202
	0000 5c62 4040 4000 0000 3e40 3c02 7c00
	0008 7e08 0808 1000 0000 4242 4244 3a00
	0000 4242 4224 1800 0000 5252 5252 2e00
	0000 4224 1824 4200 0000 4242 3e02 7c00
	0000 7e02 3c40 7e00 000c 0810 1008 0c00
	0008 0808 0808 0800 0030 1008 0810 3000
	0000 0032 4c00 0000 3c42 99a1 a199 423c

@data
